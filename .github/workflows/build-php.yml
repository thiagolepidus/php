name: Build static PHP (static-php-cli)

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: static-php-all
  cancel-in-progress: false

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        php_minor: ["8.0", "8.1", "8.2", "8.3", "8.4"]
        toolchain: ["gnu", "alpine"]
    runs-on: ubuntu-latest
    env:
      EXTS_GNU: "apcu,bcmath,bz2,calendar,ctype,curl,dba,dom,event,exif,fileinfo,filter,ftp,gd,gmp,iconv,imagick,imap,intl,mbregex,mbstring,mysqli,mysqlnd,opcache,openssl,opentelemetry,pcntl,pdo,pdo_mysql,pgsql,phar,posix,protobuf,readline,redis,session,shmop,simplexml,soap,sockets,sodium,sqlite3,swoole,swoole-hook-mysql,swoole-hook-pgsql,swoole-hook-sqlite,sysvmsg,sysvsem,sysvshm,tokenizer,xml,xmlreader,xmlwriter,xsl,zip,zlib"
      EXTS_ALPINE: "apcu,bcmath,bz2,calendar,ctype,curl,dba,dom,exif,fileinfo,filter,ftp,gd,gmp,iconv,intl,mbregex,mbstring,mysqli,mysqlnd,opcache,openssl,pcntl,pdo,pdo_mysql,pgsql,phar,posix,protobuf,readline,redis,session,shmop,simplexml,soap,sockets,sodium,sqlite3,swoole,sysvmsg,sysvsem,sysvshm,tokenizer,xml,xmlreader,xmlwriter,zip,zlib"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checkout static-php-cli
        uses: actions/checkout@v4
        with:
          repository: crazywhalecc/static-php-cli
          path: spc-src
          fetch-depth: 1

      - name: Cache SPC downloads
        uses: actions/cache@v4
        with:
          path: spc-src/downloads
          key: spc-downloads-${{ matrix.toolchain }}-${{ matrix.php_minor }}-v1
          restore-keys: |
            spc-downloads-${{ matrix.toolchain }}-

      - name: Select extensions for toolchain
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ matrix.toolchain }}" == "gnu" ]]; then
            echo "EXTS=${EXTS_GNU}" >> "$GITHUB_ENV"
          else
            echo "EXTS=${EXTS_ALPINE}" >> "$GITHUB_ENV"
          fi

      - name: Download sources (${{ matrix.php_minor }} / ${{ matrix.toolchain }})
        working-directory: spc-src
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ matrix.toolchain }}" == "gnu" ]]; then SPC=./bin/spc-gnu-docker; else SPC=./bin/spc-alpine-docker; fi
          $SPC download --for-extensions="${EXTS}" --with-php="${{ matrix.php_minor }}" --prefer-pre-built --debug

      - name: Build CLI (${{ matrix.php_minor }} / ${{ matrix.toolchain }})
        working-directory: spc-src
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ matrix.toolchain }}" == "gnu" ]]; then SPC=./bin/spc-gnu-docker; else SPC=./bin/spc-alpine-docker; fi
          $SPC build "${EXTS}" --build-cli --with-upx-pack --debug

      - name: Package artifacts (${{ matrix.php_minor }} / ${{ matrix.toolchain }})
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          BIN=spc-src/buildroot/bin/php
          test -f "$BIN"
          FULL_VER="$($BIN -r 'echo PHP_VERSION;')"
          mkdir -p dist
          OS=linux
          ARCH=x86_64
          LIBC=${{ matrix.toolchain }}
          NAME="php-${FULL_VER}-${OS}-${LIBC}-${ARCH}"
          cp "$BIN" "dist/${NAME}"
          chmod +x "dist/${NAME}"
          sha256sum "dist/${NAME}" | awk '{print $1}' > "dist/${NAME}.sha256"

      - uses: actions/upload-artifact@v4
        with:
          name: static-php-${{ matrix.php_minor }}-${{ matrix.toolchain }}
          path: dist/*
          if-no-files-found: error

  release:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        php_minor: ["8.0", "8.1", "8.2", "8.3", "8.4"]
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/download-artifact@v4
        with:
          pattern: static-php-${{ matrix.php_minor }}-*
          merge-multiple: true
          path: release

      - name: Build release notes (PHP changelog link)
        shell: bash
        run: |
          set -euo pipefail
          FIRST_ASSET=$(ls -1 release/php-* | head -n1)
          FULL_VER=$(basename "$FIRST_ASSET" | sed -E 's/^php-([0-9]+\.[0-9]+\.[0-9]+)-.*/\1/')
          MAJOR=$(echo "$FULL_VER" | cut -d. -f1)
          CHANGELOG_URL="https://www.php.net/ChangeLog-${MAJOR}.php#${FULL_VER}"
          {
            echo "PHP ${FULL_VER} changelog";
            echo "";
            echo "- Official changelog: ${CHANGELOG_URL}";
          } > release/RELEASE_NOTES.md

      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: php-${{ matrix.php_minor }}
          name: PHP ${{ matrix.php_minor }} latest
          bodyFile: release/RELEASE_NOTES.md
          allowUpdates: true
          replacesArtifacts: true
          artifacts: release/*
          token: ${{ github.token }}

